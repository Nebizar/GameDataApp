// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.put.poznan.gamebase.service.api;

import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import pl.put.poznan.gamebase.service.api.GameTypeService;
import pl.put.poznan.gamebase.structures.GameType;

privileged aspect GameTypeService_Roo_Service {
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return GameType
     */
    public abstract GameType GameTypeService.findOne(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param gameType
     */
    public abstract void GameTypeService.delete(GameType gameType);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    public abstract List<GameType> GameTypeService.save(Iterable<GameType> entities);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    public abstract void GameTypeService.delete(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return GameType
     */
    public abstract GameType GameTypeService.save(GameType entity);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return GameType
     */
    public abstract GameType GameTypeService.findOneForUpdate(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public abstract List<GameType> GameTypeService.findAll(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public abstract List<GameType> GameTypeService.findAll();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public abstract long GameTypeService.count();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<GameType> GameTypeService.findAll(GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<GameType> GameTypeService.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param gameType
     * @param gamesToAdd
     * @return GameType
     */
    public abstract GameType GameTypeService.addToGames(GameType gameType, Iterable<Long> gamesToAdd);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param gameType
     * @param gamesToRemove
     * @return GameType
     */
    public abstract GameType GameTypeService.removeFromGames(GameType gameType, Iterable<Long> gamesToRemove);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param gameType
     * @param games
     * @return GameType
     */
    public abstract GameType GameTypeService.setGames(GameType gameType, Iterable<Long> games);
    
}
