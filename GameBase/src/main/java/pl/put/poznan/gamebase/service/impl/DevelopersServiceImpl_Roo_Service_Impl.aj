// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.put.poznan.gamebase.service.impl;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import pl.put.poznan.gamebase.repository.DevelopersRepository;
import pl.put.poznan.gamebase.service.impl.DevelopersServiceImpl;
import pl.put.poznan.gamebase.structures.DevStudio;
import pl.put.poznan.gamebase.structures.Developers;

privileged aspect DevelopersServiceImpl_Roo_Service_Impl {
    
    declare @type: DevelopersServiceImpl: @Service;
    
    declare @type: DevelopersServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private DevelopersRepository DevelopersServiceImpl.developersRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param developersRepository
     */
    @Autowired
    public DevelopersServiceImpl.new(DevelopersRepository developersRepository) {
        setDevelopersRepository(developersRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return DevelopersRepository
     */
    public DevelopersRepository DevelopersServiceImpl.getDevelopersRepository() {
        return developersRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param developersRepository
     */
    public void DevelopersServiceImpl.setDevelopersRepository(DevelopersRepository developersRepository) {
        this.developersRepository = developersRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param developers
     * @return Map
     */
    public Map<String, List<MessageI18n>> DevelopersServiceImpl.validate(Developers developers) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param developers
     */
    @Transactional
    public void DevelopersServiceImpl.delete(Developers developers) {
        // Clear bidirectional many-to-one child relationship with DevStudio
        if (developers.getDevstudio() != null) {
            developers.getDevstudio().getDevelopers().remove(developers);
        }
        
        getDevelopersRepository().delete(developers);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Developers> DevelopersServiceImpl.save(Iterable<Developers> entities) {
        return getDevelopersRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void DevelopersServiceImpl.delete(Iterable<Long> ids) {
        List<Developers> toDelete = getDevelopersRepository().findAll(ids);
        getDevelopersRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Developers
     */
    @Transactional
    public Developers DevelopersServiceImpl.save(Developers entity) {
        return getDevelopersRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Developers
     */
    public Developers DevelopersServiceImpl.findOne(Long id) {
        return getDevelopersRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Developers
     */
    public Developers DevelopersServiceImpl.findOneForUpdate(Long id) {
        return getDevelopersRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Developers> DevelopersServiceImpl.findAll(Iterable<Long> ids) {
        return getDevelopersRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Developers> DevelopersServiceImpl.findAll() {
        return getDevelopersRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long DevelopersServiceImpl.count() {
        return getDevelopersRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Developers> DevelopersServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getDevelopersRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Developers> DevelopersServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getDevelopersRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param devstudio
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Developers> DevelopersServiceImpl.findByDevstudio(DevStudio devstudio, GlobalSearch globalSearch, Pageable pageable) {
        return getDevelopersRepository().findByDevstudio(devstudio, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param devstudio
     * @return Long
     */
    public long DevelopersServiceImpl.countByDevstudio(DevStudio devstudio) {
        return getDevelopersRepository().countByDevstudio(devstudio);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Developers> DevelopersServiceImpl.getEntityType() {
        return Developers.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> DevelopersServiceImpl.getIdType() {
        return Long.class;
    }
    
}
