// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.put.poznan.gamebase.web;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.datatables.ConvertedDatatablesData;
import io.springlets.data.web.datatables.Datatables;
import io.springlets.data.web.datatables.DatatablesColumns;
import io.springlets.data.web.datatables.DatatablesPageable;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Objects;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.core.convert.ConversionService;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import pl.put.poznan.gamebase.service.api.GamesService;
import pl.put.poznan.gamebase.service.api.ReviewService;
import pl.put.poznan.gamebase.structures.Games;
import pl.put.poznan.gamebase.structures.Review;
import pl.put.poznan.gamebase.web.GamesesCollectionThymeleafController;
import pl.put.poznan.gamebase.web.GamesesCollectionThymeleafLinkFactory;
import pl.put.poznan.gamebase.web.GamesesItemReviewsThymeleafController;

privileged aspect GamesesItemReviewsThymeleafController_Roo_Thymeleaf {
    
    declare @type: GamesesItemReviewsThymeleafController: @Controller;
    
    declare @type: GamesesItemReviewsThymeleafController: @RequestMapping(value = "/gameses/{games}/reviews", name = "GamesesItemReviewsThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private GamesService GamesesItemReviewsThymeleafController.gamesService;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ReviewService GamesesItemReviewsThymeleafController.reviewService;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource GamesesItemReviewsThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<GamesesCollectionThymeleafController> GamesesItemReviewsThymeleafController.collectionLink;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ConversionService GamesesItemReviewsThymeleafController.conversionService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param gamesService
     * @param reviewService
     * @param conversionService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public GamesesItemReviewsThymeleafController.new(GamesService gamesService, ReviewService reviewService, ConversionService conversionService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setGamesService(gamesService);
        setReviewService(reviewService);
        setConversionService(conversionService);
        setMessageSource(messageSource);
        setCollectionLink(linkBuilder.of(GamesesCollectionThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return GamesService
     */
    public GamesService GamesesItemReviewsThymeleafController.getGamesService() {
        return gamesService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param gamesService
     */
    public void GamesesItemReviewsThymeleafController.setGamesService(GamesService gamesService) {
        this.gamesService = gamesService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ReviewService
     */
    public ReviewService GamesesItemReviewsThymeleafController.getReviewService() {
        return reviewService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param reviewService
     */
    public void GamesesItemReviewsThymeleafController.setReviewService(ReviewService reviewService) {
        this.reviewService = reviewService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource GamesesItemReviewsThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void GamesesItemReviewsThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<GamesesCollectionThymeleafController> GamesesItemReviewsThymeleafController.getCollectionLink() {
        return collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param collectionLink
     */
    public void GamesesItemReviewsThymeleafController.setCollectionLink(MethodLinkBuilderFactory<GamesesCollectionThymeleafController> collectionLink) {
        this.collectionLink = collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService GamesesItemReviewsThymeleafController.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void GamesesItemReviewsThymeleafController.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Games
     */
    @ModelAttribute
    public Games GamesesItemReviewsThymeleafController.getGames(@PathVariable("games") Long id, Locale locale, HttpMethod method) {
        Games games = null;
        if (HttpMethod.PUT.equals(method)) {
            games = gamesService.findOneForUpdate(id);
        } else {
            games = gamesService.findOne(id);
        }
        
        if (games == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Games", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return games;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void GamesesItemReviewsThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void GamesesItemReviewsThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param games
     * @param datatablesColumns
     * @param search
     * @param pageable
     * @param draw
     * @return ResponseEntity
     */
    @GetMapping(name = "datatables", produces = Datatables.MEDIA_TYPE, value = "/dt")
    @ResponseBody
    public ResponseEntity<ConvertedDatatablesData<Review>> GamesesItemReviewsThymeleafController.datatables(@ModelAttribute Games games, DatatablesColumns datatablesColumns, GlobalSearch search, DatatablesPageable pageable, @RequestParam("draw") Integer draw) {
        
        Page<Review> reviews = getReviewService().findByGames(games, search, pageable);
        long totalReviewsCount = getReviewService().countByGames(games);
        ConvertedDatatablesData<Review> data =  new ConvertedDatatablesData<Review>(reviews, totalReviewsCount, draw, getConversionService(), datatablesColumns);
        return ResponseEntity.ok(data);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param datatablesColumns
     * @param search
     * @param pageable
     * @param draw
     * @return ResponseEntity
     */
    @GetMapping(name = "datatablesByIdsIn", produces = Datatables.MEDIA_TYPE, value = "/dtByIdsIn")
    @ResponseBody
    public ResponseEntity<ConvertedDatatablesData<Review>> GamesesItemReviewsThymeleafController.datatablesByIdsIn(@RequestParam("ids") List<Long> ids, DatatablesColumns datatablesColumns, GlobalSearch search, DatatablesPageable pageable, @RequestParam("draw") Integer draw) {
        
        Page<Review> reviews = getReviewService().findAllByIdsIn(ids, search, pageable);
        long totalReviewsCount = reviews.getTotalElements();
        ConvertedDatatablesData<Review> data =  new ConvertedDatatablesData<Review>(reviews, totalReviewsCount, draw, getConversionService(), datatablesColumns);
        return ResponseEntity.ok(data);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param games
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/create-form", name = "createForm")
    public ModelAndView GamesesItemReviewsThymeleafController.createForm(@ModelAttribute Games games, Model model) {
        populateForm(model);
        model.addAttribute("review", new Review());
        return new ModelAndView("gameses/reviews/create");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param games
     * @param reviewsToRemove
     * @return ResponseEntity
     */
    @DeleteMapping(name = "removeFromReviews", value = "/{reviewsToRemove}")
    @ResponseBody
    public ResponseEntity<?> GamesesItemReviewsThymeleafController.removeFromReviews(@ModelAttribute Games games, @PathVariable("reviewsToRemove") Long reviewsToRemove) {
        getGamesService().removeFromReviews(games,Collections.singleton(reviewsToRemove));
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param games
     * @param reviewsToRemove
     * @return ResponseEntity
     */
    @DeleteMapping(name = "removeFromReviewsBatch", value = "/batch/{reviewsToRemove}")
    @ResponseBody
    public ResponseEntity<?> GamesesItemReviewsThymeleafController.removeFromReviewsBatch(@ModelAttribute Games games, @PathVariable("reviewsToRemove") Collection<Long> reviewsToRemove) {
        getGamesService().removeFromReviews(games, reviewsToRemove);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param games
     * @param reviews
     * @param version
     * @param concurrencyControl
     * @param model
     * @return ModelAndView
     */
    @PostMapping(name = "create")
    public ModelAndView GamesesItemReviewsThymeleafController.create(@ModelAttribute Games games, @RequestParam(value = "reviewsIds", required = false) List<Long> reviews, @RequestParam("parentVersion") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, Model model) {
        // Remove empty values
        if (reviews != null) {
            for (Iterator<Long> iterator = reviews.iterator(); iterator.hasNext();) {
                if (iterator.next() == null) {
                    iterator.remove();
                }
            }
        }
        // Concurrency control
        if(!Objects.equals(version, games.getVersion()) && StringUtils.isEmpty(concurrencyControl)){
            populateForm(model);
            // Obtain the selected books and include them in the author that will be 
            // included in the view
            if (reviews != null) {
                games.setReviews(new HashSet<Review>(getReviewService().findAll(reviews)));
            }else{
                games.setReviews(new HashSet<Review>());
            }
            // Reset the version to prevent update
             games.setVersion(version);
            // Include the updated element in the model
            model.addAttribute("games", games);
            model.addAttribute("concurrency", true);
            return new ModelAndView("gameses/reviews/create");
        }else if(!Objects.equals(version, games.getVersion()) && "discard".equals(concurrencyControl)){
            populateForm(model);
            // Provide the original element from the Database
            model.addAttribute("games", games);
            model.addAttribute("concurrency", false);
            return new ModelAndView("gameses/reviews/create");
        }
        getGamesService().setReviews(games,reviews);
        return new ModelAndView("redirect:" + getCollectionLink().to(GamesesCollectionThymeleafLinkFactory.LIST).toUriString());
    }
    
}
