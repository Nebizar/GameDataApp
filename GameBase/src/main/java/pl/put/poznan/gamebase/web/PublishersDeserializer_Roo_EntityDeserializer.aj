// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.put.poznan.gamebase.web;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;
import pl.put.poznan.gamebase.service.api.PublishersService;
import pl.put.poznan.gamebase.structures.Publishers;
import pl.put.poznan.gamebase.web.PublishersDeserializer;

privileged aspect PublishersDeserializer_Roo_EntityDeserializer {
    
    declare @type: PublishersDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return PublishersService
     */
    public PublishersService PublishersDeserializer.getPublishersService() {
        return publishersService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param publishersService
     */
    public void PublishersDeserializer.setPublishersService(PublishersService publishersService) {
        this.publishersService = publishersService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService PublishersDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void PublishersDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Publishers
     * @throws IOException
     */
    public Publishers PublishersDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Publishers publishers = publishersService.findOne(id);
        if (publishers == null) {
            throw new NotFoundException("Publishers not found");
        }
        return publishers;
    }
    
}
