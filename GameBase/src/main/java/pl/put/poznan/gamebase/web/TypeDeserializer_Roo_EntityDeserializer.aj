// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.put.poznan.gamebase.web;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;
import pl.put.poznan.gamebase.service.api.TypeService;
import pl.put.poznan.gamebase.structures.Type;
import pl.put.poznan.gamebase.web.TypeDeserializer;

privileged aspect TypeDeserializer_Roo_EntityDeserializer {
    
    declare @type: TypeDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return TypeService
     */
    public TypeService TypeDeserializer.getTypeService() {
        return typeService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param typeService
     */
    public void TypeDeserializer.setTypeService(TypeService typeService) {
        this.typeService = typeService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService TypeDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void TypeDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Type
     * @throws IOException
     */
    public Type TypeDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Type type = typeService.findOne(id);
        if (type == null) {
            throw new NotFoundException("Type not found");
        }
        return type;
    }
    
}
