// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.put.poznan.gamebase.structures;

import java.util.Objects;
import pl.put.poznan.gamebase.structures.DevStudio;
import pl.put.poznan.gamebase.structures.Developer;

privileged aspect Developer_Roo_JavaBean {
    
    /**
     * Gets id value
     * 
     * @return Long
     */
    public Long Developer.getId() {
        return this.id;
    }
    
    /**
     * Sets id value
     * 
     * @param id
     * @return Developer
     */
    public Developer Developer.setId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets version value
     * 
     * @return Integer
     */
    public Integer Developer.getVersion() {
        return this.version;
    }
    
    /**
     * Sets version value
     * 
     * @param version
     * @return Developer
     */
    public Developer Developer.setVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Gets devstudio value
     * 
     * @return DevStudio
     */
    public DevStudio Developer.getDevstudio() {
        return this.devstudio;
    }
    
    /**
     * Sets devstudio value
     * 
     * @param devstudio
     * @return Developer
     */
    public Developer Developer.setDevstudio(DevStudio devstudio) {
        this.devstudio = devstudio;
        return this;
    }
    
    /**
     * Gets name value
     * 
     * @return String
     */
    public String Developer.getName() {
        return this.name;
    }
    
    /**
     * Sets name value
     * 
     * @param name
     * @return Developer
     */
    public Developer Developer.setName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Gets surname value
     * 
     * @return String
     */
    public String Developer.getSurname() {
        return this.surname;
    }
    
    /**
     * Sets surname value
     * 
     * @param surname
     * @return Developer
     */
    public Developer Developer.setSurname(String surname) {
        this.surname = surname;
        return this;
    }
    
    /**
     * Gets status value
     * 
     * @return String
     */
    public String Developer.getStatus() {
        return this.status;
    }
    
    /**
     * Sets status value
     * 
     * @param status
     * @return Developer
     */
    public Developer Developer.setStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Gets salary value
     * 
     * @return Float
     */
    public Float Developer.getSalary() {
        return this.salary;
    }
    
    /**
     * Sets salary value
     * 
     * @param salary
     * @return Developer
     */
    public Developer Developer.setSalary(Float salary) {
        this.salary = salary;
        return this;
    }
    
    /**
     * This `equals` implementation is specific for JPA entities and uses 
     * the entity identifier for it, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @param obj
     * @return Boolean
     */
    public boolean Developer.equals(Object obj) {
        if (this == obj) {
            return true;
        }
        // instanceof is false if the instance is null
        if (!(obj instanceof Developer)) {
            return false;
        }
        return getId() != null && Objects.equals(getId(), ((Developer) obj).getId());
    }
    
    /**
     * This `hashCode` implementation is specific for JPA entities and uses a fixed `int` value to be able 
     * to identify the entity in collections after a new id is assigned to the entity, following the article in 
     * https://vladmihalcea.com/2016/06/06/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
     * 
     * @return Integer
     */
    public int Developer.hashCode() {
        return 31;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return String
     */
    public String Developer.toString() {
        return "Developer {" + 
                "id='" + id + '\'' + 
                ", version='" + version + '\'' + 
                ", name='" + name + '\'' + 
                ", surname='" + surname + '\'' + 
                ", status='" + status + '\'' + 
                ", salary='" + salary + '\'' + "}" + super.toString();
    }
    
}
