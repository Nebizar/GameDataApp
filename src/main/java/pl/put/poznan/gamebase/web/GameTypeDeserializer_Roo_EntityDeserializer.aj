// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package pl.put.poznan.gamebase.web;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;
import pl.put.poznan.gamebase.service.api.GameTypeService;
import pl.put.poznan.gamebase.structures.GameType;
import pl.put.poznan.gamebase.web.GameTypeDeserializer;

privileged aspect GameTypeDeserializer_Roo_EntityDeserializer {
    
    declare @type: GameTypeDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return GameTypeService
     */
    public GameTypeService GameTypeDeserializer.getGameTypeService() {
        return gameTypeService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param gameTypeService
     */
    public void GameTypeDeserializer.setGameTypeService(GameTypeService gameTypeService) {
        this.gameTypeService = gameTypeService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService GameTypeDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void GameTypeDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return GameType
     * @throws IOException
     */
    public GameType GameTypeDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        GameType gameType = gameTypeService.findOne(id);
        if (gameType == null) {
            throw new NotFoundException("GameType not found");
        }
        return gameType;
    }
    
}
